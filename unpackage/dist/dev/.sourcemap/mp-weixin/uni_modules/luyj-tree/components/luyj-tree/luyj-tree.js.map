{"version":3,"sources":["webpack:///D:/MyRepository/App/Uni-App/AftersveClientApp/uni_modules/luyj-tree/components/luyj-tree/luyj-tree.vue?a115","webpack:///D:/MyRepository/App/Uni-App/AftersveClientApp/uni_modules/luyj-tree/components/luyj-tree/luyj-tree.vue?c5c2","webpack:///D:/MyRepository/App/Uni-App/AftersveClientApp/uni_modules/luyj-tree/components/luyj-tree/luyj-tree.vue?7f1c","webpack:///D:/MyRepository/App/Uni-App/AftersveClientApp/uni_modules/luyj-tree/components/luyj-tree/luyj-tree.vue?01d1","uni-app:///uni_modules/luyj-tree/components/luyj-tree/luyj-tree.vue","webpack:///D:/MyRepository/App/Uni-App/AftersveClientApp/uni_modules/luyj-tree/components/luyj-tree/luyj-tree.vue?1a8d","webpack:///D:/MyRepository/App/Uni-App/AftersveClientApp/uni_modules/luyj-tree/components/luyj-tree/luyj-tree.vue?8d00"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkI;AAClI;AAC6D;AACL;AACsC;;;AAG9F;AAC6L;AAC7L,gBAAgB,2LAAU;AAC1B,EAAE,+EAAM;AACR,EAAE,gGAAM;AACR,EAAE,yGAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,oGAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,aAAa,0SAEN;AACP,KAAK;AACL;AACA,aAAa,kUAEN;AACP,KAAK;AACL;AACA,aAAa,8RAEN;AACP;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrEA;AAAA;AAAA;AAAA;AAAwuB,CAAgB,yrBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACsC5vB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA,mBADA;AAEA;AACA;AACA;AACA,mBADA;AAEA,iDAFA,EAFA;;AAMA;AACA;AACA,kBADA;AAEA,wBAFA,EAPA;;AAWA;AACA;AACA,kBADA;AAEA,wBAFA,EAZA;;AAgBA;AACA;AACA,kBADA;AAEA,wBAFA,EAjBA;;AAqBA;AACA;AACA,kBADA;AAEA,iBAFA,EAtBA;;AA0BA;AACA;AACA,kBADA;AAEA,mBAFA,EA3BA;;AA+BA;AACA;AACA,kBADA;AAEA,iBAFA,EAhCA;;AAoCA;AACA;AACA,kBADA;AAEA,kBAFA,EArCA;;AAyCA;AACA;AACA,mBADA;AAEA,mBAFA,EA1CA;;AA8CA;AACA;AACA,iBADA;AAEA;AACA;AACA,OAJA,EA/CA;;AAqDA;AACA;AACA,mBADA;AAEA;AACA;AACA,OAJA,EAtDA;;AA4DA;AACA;AACA,kBADA;AAEA;AACA;AACA,OAJA,EA7DA;;AAmEA;AACA;AACA,iBADA;AAEA,+CAFA,EApEA;;AAwEA;AACA;AACA,mBADA;AAEA;AACA;AACA,OAJA,EAzEA;;AA+EA;AACA;AACA,iBADA;AAEA,+CAFA,EAhFA;;AAoFA;AACA;AACA,kBADA;AAEA,wBAFA,EArFA;;AAyFA;AACA;AACA,kBADA;AAEA,wBAFA,EA1FA;;AA8FA;AACA;AACA,kBADA;AAEA;AACA;AACA,kBADA;AAEA,uBAFA;AAGA,8BAHA;AAIA,yBAJA;AAKA,8BALA,EAKA;AACA,sBANA,CAMA;AANA;AAQA,OAXA,EA/FA;;AA4GA;;;AAGA;AACA,mBADA;AAEA,oBAFA,EA/GA;;AAmHA;AACA;AACA,kBADA;AAEA,iBAFA,EApHA,EAFA;;;AA2HA,MA3HA,kBA2HA;AACA;AACA;AACA,mBAFA,EAEA;AACA,mBAHA,EAGA;AACA,wBAJA,EAIA;AACA,2BALA,EAKA;AACA,0BANA,EAMA;AACA,wBAPA,EAOA;;AAEA,yBATA,EASA;AACA,sBAVA,EAUA;AACA,cAXA,EAWA;AACA,eAZA;AAaA,eAbA;AAcA,yBAdA;AAeA,wCAfA,EAeA;AACA,sBAhBA;AAiBA,kCAjBA;AAkBA,uBAlBA,EAkBA;AACA;AACA;AACA,mDADA,EACA;AACA,2DAFA,EAEA;AACA,wEAHA,CAGA;AAHA,OApBA;;AA0BA,GAtJA;AAuJA;AACA;AACA;AACA;AACA;AACA,2BAFA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAPA,MAOA;AACA,8BADA,CACA;AACA;AACA;AACA;AACA;AACA,aAFA;AAGA;AACA;AACA,aAFA,MAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAtCA;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA,OALA;AAMA,gBANA,EAxCA;;AAgDA;AACA;AACA;AACA;AACA;AACA,KArDA,EAvJA;;AA8MA;AACA;AACA,GAhNA;AAiNA;AACA,SAlNA,qBAkNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAPA,CAOA;AACA;AACA;AACA;AACA,cADA;AAEA,QAFA;AAGA;AACA;AACA,GAhPA;AAiPA;AACA;AACA;;;AAGA,aALA,qBAKA,IALA,EAKA;AACA;AACA;AACA;AACA;AACA,SAFA;AAGA;AACA;AACA;AACA,KAdA;AAeA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA1BA;AA2BA;AACA;;;;;AAKA,YAjCA,oBAiCA,CAjCA,EAiCA,IAjCA,EAiCA,KAjCA,EAiCA;AACA;AACA,2BAFA,CAEA;AACA,KApCA;AAqCA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA,OAJA,MAIA;AACA;AACA;AACA;AACA;AACA;AACA,KAtDA;AAuDA;;;;;;AAMA,kBA7DA,0BA6DA,CA7DA,EA6DA,IA7DA,EA6DA,KA7DA,EA6DA,EA7DA,EA6DA,EA7DA,EA6DA;AACA,oBADA,GACA,KADA;AAEA,wBAFA,GAEA,+BAFA;AAGA;AACA;AACA;AACA;AACA;AACA,iBALA,MAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlDA,2EAmDA,CAhHA;AAiHA;AACA,iBAlHA,yBAkHA,GAlHA,EAkHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAKA;AACA,OAhBA;AAiBA,KApIA;AAqIA;AACA,eAtIA,uBAsIA,GAtIA,EAsIA,GAtIA,EAsIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eADA;AAEA,6BAFA;;AAIA;AACA,qBAMA;AACA;AACA,KAzJA;;AA2JA;;;;AAIA,gBA/JA,wBA+JA,IA/JA,EA+JA,QA/JA,EA+JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAhLA;;AAkLA;;;;AAIA,cAtLA,sBAsLA,IAtLA,EAsLA,eAtLA,EAsLA;AACA,qDADA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCARA,CAQA;;AAEA;AACA;AACA;AACA,iCAFA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAzMA;AA0MA;;;AAGA,iBA7MA,yBA6MA,CA7MA,EA6MA;AACA;AACA;AACA;AACA;AACA,qBADA;;AAGA;AACA;AACA;AACA,yBAVA,CAUA;AACA,4BAXA,CAWA;AACA;AACA,KA1NA;AA2NA;;;;AAIA,UA/NA,kBA+NA,IA/NA,EA+NA,OA/NA,EA+NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SATA,CASA;AACA;AACA;;AAEA;AACA,KAlPA;AAmPA;;;AAGA,kBAtPA,4BAsPA;AACA;AACA,cADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAHA,MAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAxBA;AAyBA,KAlRA;;AAoRA;AACA,mBArRA,2BAqRA,GArRA,EAqRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAjSA;;AAmSA;AACA,YApSA,oBAoSA,EApSA,EAoSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA3SA;;AA6SA;;;;AAIA,YAjTA,oBAiTA,IAjTA,EAiTA,KAjTA,EAiTA;AACA;AACA;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA,yCAFA,CAEA;AACA,OAHA,MAGA;AACA;AACA,iDAFA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAlUA;AAmUA;;;AAGA,eAtUA,yBAsUA;AACA;AACA,KAxUA;AAyUA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;AACA;AACA,SAHA,MAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCADA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAFA,MAEA;AACA;AACA;AACA,SAVA;AAWA;AACA;AACA;AAzXA,GAjPA,E;;;;;;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AAA62C,CAAgB,mtCAAG,EAAC,C;;;;;;;;;;;ACAj4C;AACA,OAAO,KAAU,EAAE,kBAKd","file":"uni_modules/luyj-tree/components/luyj-tree/luyj-tree.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./luyj-tree.vue?vue&type=template&id=235a85fd&scoped=true&\"\nvar renderjs\nimport script from \"./luyj-tree.vue?vue&type=script&lang=js&\"\nexport * from \"./luyj-tree.vue?vue&type=script&lang=js&\"\nimport style0 from \"./luyj-tree.vue?vue&type=style&index=0&id=235a85fd&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"235a85fd\",\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"uni_modules/luyj-tree/components/luyj-tree/luyj-tree.vue\"\nexport default component.exports","export * from \"-!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./luyj-tree.vue?vue&type=template&id=235a85fd&scoped=true&\"","var components\ntry {\n  components = {\n    luyjTreeSearch: function() {\n      return import(\n        /* webpackChunkName: \"uni_modules/luyj-tree/components/luyj-tree-search/luyj-tree-search\" */ \"@/uni_modules/luyj-tree/components/luyj-tree-search/luyj-tree-search.vue\"\n      )\n    },\n    luyjTreeNavigation: function() {\n      return import(\n        /* webpackChunkName: \"uni_modules/luyj-tree/components/luyj-tree-navigation/luyj-tree-navigation\" */ \"@/uni_modules/luyj-tree/components/luyj-tree-navigation/luyj-tree-navigation.vue\"\n      )\n    },\n    luyjTreeItem: function() {\n      return import(\n        /* webpackChunkName: \"uni_modules/luyj-tree/components/luyj-tree-item/luyj-tree-item\" */ \"@/uni_modules/luyj-tree/components/luyj-tree-item/luyj-tree-item.vue\"\n      )\n    }\n  }\n} catch (e) {\n  if (\n    e.message.indexOf(\"Cannot find module\") !== -1 &&\n    e.message.indexOf(\".vue\") !== -1\n  ) {\n    console.error(e.message)\n    console.error(\"1. 排查组件名称拼写是否正确\")\n    console.error(\n      \"2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom\"\n    )\n    console.error(\n      \"3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件\"\n    )\n  } else {\n    throw e\n  }\n}\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var l0 = _vm.__map(_vm.tree, function(item, index) {\n    var $orig = _vm.__get_orig(item)\n\n    var m0 = _vm.isChecked(item)\n\n    if (_vm.$scope.data.scopedSlotsCompiler === \"augmented\") {\n      _vm.$setScopedSlotsParams(\"default\", {\n        item: $orig,\n        slotObj: _vm.slotObj\n      })\n    }\n\n    return {\n      $orig: $orig,\n      m0: m0\n    }\n  })\n\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        l0: l0\n      }\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./luyj-tree.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./luyj-tree.vue?vue&type=script&lang=js&\"","<template>\r\n\t<view>\r\n\t\t<!-- 搜索框 -->\r\n\t\t<view class=\"header\">\r\n\t\t\t<!-- 搜索栏 -->\r\n\t\t\t<luyj-tree-search v-if=\"searchIf\" :backgroundColor=\"searchBackgroundColor\"\r\n\t\t\t\t:inputBackgroundColor=\"searchInputBackgroundColor\" :radius=\"searchRadius\" :iconColor=\"searchIconColor\"\r\n\t\t\t\t:placeholder=\"searchPlaceholder\" :placeholderStyle=\"searchPlaceholderStyle\" :maxlength=\"searchMaxlength\"\r\n\t\t\t\t:clearable=\"searchClearable\" @confirm=\"confirmSearch\"></luyj-tree-search>\r\n\t\t\t<!-- 面包屑导航 -->\r\n\t\t\t<luyj-tree-navigation :slabel=\"props.label\" @inF=\"navigationInt\" @clickItem=\"backTree\">\r\n\t\t\t</luyj-tree-navigation>\r\n\t\t\t<!-- 面包屑导航 -->\r\n\t\t</view>\r\n\t\t<!-- 列表 -->\r\n\t\t<view>\r\n\t\t\t<view class=\"container-list\" :style=\"{'padding-bottom' : isCheck ? '160rpx' : 0 , 'padding-top' :searchIf ? '200rpx' :'90rpx' }\">\r\n\t\t\t\t<luyj-tree-item v-for=\"(item , index) in tree\" :key=\"index\" :item=\"item\" :isCheck=\"isCheck\"\r\n\t\t\t\t\t:checkActiveColor=\"checkActiveColor\" :checkNoneColor=\"checkNoneColor\" :multiple=\"props.multiple\" :checked=\"isChecked(item)\"\r\n\t\t\t\t\t :nodes=\"props.nodes\" :comparison=\"comparison\" @clickItem=\"toChildren\"\r\n\t\t\t\t\t@change=\"checkbox($event , item , index)\">\r\n\t\t\t\t\t<template slot=\"body\">\r\n\t\t\t\t\t\t<slot v-bind:item=\"item\" v-bind:slotObj=\"slotObj\" >\r\n\t\t\t\t\t\t\t<view class=\"word text-cut\">{{ item[props.label] }}</view>\r\n\t\t\t\t\t\t</slot>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</luyj-tree-item>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t\r\n\t\t<!-- 确定按钮 -->\r\n\t\t<view v-if=\"isCheck\" class=\"btn box_sizing\">\r\n\t\t\t<button class=\"sureBtn\" type=\"primary\" @click=\"backConfirm\">确认</button>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\t/**\r\n\t * luyj-tree 无限树形结构树、支持搜索选择。\r\n\t * @description  无限树形结构组件。支持搜索、选择(包括单选、多选)。面包屑类型导航。原插件地址：https://ext.dcloud.net.cn/plugin?id=2423。\r\n\t * @tutorial url https://ext.dcloud.net.cn/plugin?name=luyj-tree\r\n\t * @property {Boolean} searchIf 是否开启搜索 （默认值true）\r\n\t * @property {String} searchBackgroundColor 搜索框背景色(默认#FFFFFF)\r\n\t * @property {String} searchInputBackgroundColor 搜索框的输入框背景色(默认#EEEFF0)\r\n\t * @property {Number} searchRadius 搜索框的圆角值，单位rpx（默认40）\r\n\t * @property {String} searchPlaceholder 搜索框的内容物空时提示内容\r\n\t * @property {String} searchPlaceholderStyle 搜索框的placehoder的样式\r\n\t * @property {Number} searchMaxlength 搜索框的最大输入长度 ,设置为 -1 的时候不限制最大长度\r\n\t * @property {String} searchIconColor 搜索框的图标颜色（默认#B8B8B8）\r\n\t * @property {Boolean} searchClearable 搜索框是否显示清除按钮\r\n\t * @property {Array}  trees 传入的树形结构，每个对象必须包含唯一的id值(默认值【】)\r\n\t * @property {Boolean} isCheck 是否开启选择操作（默认值false）\r\n\t * @property {Object} slotObj 传入插槽的参数（因为插槽进行了循环，不能直接引用页面的参数，需要传递） \r\n\t * @property {Array} checkList 选中列表\r\n\t * @property {Boolean} parent 当子级全选时,是否选中父级数据(prop.checkStrictly为true时生效)(默认值false)\r\n\t * @property {Array} parentList 父级列表\r\n\t * @property {String} checkActiveColor 选中时单选框的颜色 (默认#00AAFF)\r\n\t * @property {String} checkNoneColor 未选中时单选框的颜色（默认#B8B8B8) \r\n\t * @property {Object} props 参数配置。\r\n\t *  @property {String} id id列的属性名称 \r\n\t * \t@param {String}  label 指定选项标签为选项对象的某个属性值(默认值:name)\r\n\t *  @param {String} children   指定选项的子选项为选项对象的某个属性名(默认值：children)\r\n\t *  @param {Boolean} multiple 值为true时为多选，为false时是单选(默认值true)\r\n\t *  @param {Boolean} checkStrictly(废弃) 需要在多选模式下才传该值，checkStrictly为false时，可让父子节点取消关联，选择任意一级选项。为true时关联子级，可以全选(默认值为false)\r\n\t *  @param {Boolean} nodes  在单选模式下，nodes为false时，可以选择任意一级选项，nodes为true时，只能选择叶子节点(默认值为true) \r\n\t * @property {Boolean} stepReload 是否“分页加载”数据\r\n\t * @property {Number} pageSize 分步加载生效时（当条数过大时，反应时间很长）\r\n\t * @return {Function} clickItem 点击导航栏事件\r\n\t * \t@value item 当前选中的item值\r\n\t *  @value \trealHasChildren 是否包含子级\r\n\t * @event {Function()} change 改变选择值时的方法\r\n\t * @event {Function()} sendValue 提交选择的方法\r\n\t * @event {Function()} backTree\t选中导航栏时，返回其他层\r\n\t */\r\n\texport default {\r\n\t\tname: \"luyj-tree\",\r\n\t\tprops: {\r\n\t\t\t// 是否开启搜索\r\n\t\t\tsearchIf: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: () => true\r\n\t\t\t},\r\n\t\t\t// 搜索框背景色\r\n\t\t\tsearchBackgroundColor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: '#FFFFFF'\r\n\t\t\t},\r\n\t\t\t// 搜索框的输入框内背景颜色\r\n\t\t\tsearchInputBackgroundColor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: '#EEEFF0'\r\n\t\t\t},\r\n\t\t\t// 搜索框的图标的颜色\r\n\t\t\tsearchIconColor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: '#B8B8B8'\r\n\t\t\t},\r\n\t\t\t// 搜索框的圆角值，单位rpx\r\n\t\t\tsearchRadius: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 40\r\n\t\t\t},\r\n\t\t\t// 搜索框的提示placeholder内容\r\n\t\t\tsearchPlaceholder: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: '搜索'\r\n\t\t\t},\r\n\t\t\t// 搜索框的placeholder的样式\r\n\t\t\tsearchPlaceholderStyle: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\t// 搜索框最大输入长度 ,设置为 -1 的时候不限制最大长度\r\n\t\t\tsearchMaxlength: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 140\r\n\t\t\t},\r\n\t\t\t// 搜索框是否显示清除按钮\r\n\t\t\tsearchClearable: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: true\r\n\t\t\t},\r\n\t\t\t// 传入的树形结构数据，每个对象必须包含唯一的id值\r\n\t\t\ttrees: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\tdefault: () => {\r\n\t\t\t\t\treturn []\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t//是否开启选择操作，值为false时仅展示，无操作\r\n\t\t\tisCheck: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: () => {\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 传入插槽的其他参数\r\n\t\t\tslotObj: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault :() =>{\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 选中列表\r\n\t\t\tcheckList: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\tdefault: () => []\r\n\t\t\t},\r\n\t\t\t// 当子级全选时,是否选中父级数据(prop.checkStrictly为true时生效)\r\n\t\t\tparent: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: () => {\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 父级列表\r\n\t\t\tparentList: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\tdefault: () => []\r\n\t\t\t},\r\n\t\t\t// 选中时单选框的颜色\r\n\t\t\tcheckActiveColor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: '#00AAFF'\r\n\t\t\t},\r\n\t\t\t// 未选中时单选框的颜色\r\n\t\t\tcheckNoneColor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: '#B8B8B8'\r\n\t\t\t},\r\n\t\t\t// 树的属性参数\r\n\t\t\tprops: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault: () => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: 'id',\r\n\t\t\t\t\t\tlabel: 'name',\r\n\t\t\t\t\t\tchildren: 'children',\r\n\t\t\t\t\t\tmultiple: false,\r\n\t\t\t\t\t\tcheckStrictly: false, //不关联\r\n\t\t\t\t\t\tnodes: false, // nodes为false时，可以选择任意一级选项；nodes为true时只能选择叶子节点\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 是否懒加载树的值\r\n\t\t\t */\r\n\t\t\tstepReload : {\r\n\t\t\t\ttype:Boolean,\r\n\t\t\t\tdefault:false\r\n\t\t\t},\r\n\t\t\t// 每次循环加载的item的数据量\r\n\t\t\tpageSize : {\r\n\t\t\t\ttype : Number,\r\n\t\t\t\tdefault:50\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\t// 导航条\r\n\t\t\t\tsetIsre: null, // 导航条方法 - 设置是否搜索中方法\r\n\t\t\t\tgetIsre : null,\t// 获取是否搜索中\r\n\t\t\t\tsetTreeStack: null, // 导航条 - 设置导航\r\n\t\t\t\tconcatTreeStack: null, // 导航条 - 拼接当前导航对象\r\n\t\t\t\tclearTreeStack: null, // 导航条- 清空导航条\r\n\t\t\t\tgetTreeStack: null, // 导航条 - 获取导航条\r\n\t\t\t\t\r\n\t\t\t\titemsLoading : false,\t// item是否在循环渲染中\r\n\t\t\t\titemsStop : false,\t\t// 是否终止其他渲染\r\n\t\t\t\ttree: [],\t\t\t// 默认数组\r\n\t\t\t\tnewNum: 0,\r\n\t\t\t\toldNum: 0,\r\n\t\t\t\tallData: this.trees,\r\n\t\t\t\tparent_data: this.parentList || [], //选择父辈\r\n\t\t\t\tsearchResult: [],\r\n\t\t\t\tnewCheckList: this.checkList,\r\n\t\t\t\tnodePathArray: [],\t\t\t\t\t// 当前展示的路径\r\n\t\t\t\t// item名称对照表\r\n\t\t\t\tcomparison: {\r\n\t\t\t\t\tvalue: this.props.id ? this.props.id : 'id', // 选中值名称\r\n\t\t\t\t\tlabel: this.props.label ? this.props.label : 'name', // 显示名称\r\n\t\t\t\t\tchildren: this.props.children ? this.props.children : 'children', // 子集名称\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\t// 监听数据值的变化\r\n\t\t\ttrees: function(val, oldval) {\r\n\t\t\t\tif (val != oldval) {\r\n\t\t\t\t\tvar tree_stack = this.getTreeStack();\r\n\t\t\t\t\tthis.allData = val;\t\t\t\t// 重新加载所有树\r\n\t\t\t\t\t// 重新加载当前树\r\n\t\t\t\t\tif(!Array.isArray(tree_stack)){\r\n\t\t\t\t\t\tthis.loadTree(val);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar length = tree_stack.length;\r\n\t\t\t\t\tif( length === 0){\r\n\t\t\t\t\t\tif(typeof(this.getIsre)  === \"function\"){\r\n\t\t\t\t\t\t\tif(this.getIsre()){\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.loadTree(val);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlet tempArray = val;\t\t// 存储当前值\r\n\t\t\t\t\t\tlet children = this.props.children;\r\n\t\t\t\t\t\tfor(var i = 0 ; i < length ; i ++){\r\n\t\t\t\t\t\t\tvar tempObject = tempArray.find(item=>{\r\n\t\t\t\t\t\t\t\treturn tree_stack[i].Value == item.Value;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tif(Boolean(tempObject)){\r\n\t\t\t\t\t\t\t\ttempArray = tempObject[children];\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t// 跳转到全部\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(i == length -1){\r\n\t\t\t\t\t\t\t\tthis.loadTree(tempArray);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 树的属性对照参数\r\n\t\t\tprops: {\r\n\t\t\t\thandler: function(val) {\r\n\t\t\t\t\tthis.comparison.value = this.props.id ? this.props.id : 'id';\r\n\t\t\t\t\tthis.comparison.label = this.props.label ? this.props.label : 'name';\r\n\t\t\t\t\tthis.comparison.children = this.props.children ? this.props.children : [];\r\n\t\t\t\t},\r\n\t\t\t\tdeep: true\r\n\t\t\t},\r\n\t\t\tcheckList: function(val , oldVal){\r\n\t\t\t\tif(val != oldVal){\r\n\t\t\t\t\tthis.newCheckList = JSON.parse(JSON.stringify(val))\r\n\t\t\t\t\treturn val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated:function(){\r\n\t\t\tthis.loadTree(this.trees);\r\n\t\t},\r\n\t\t// 实例被挂载后调用\r\n\t\tmounted() {\r\n\t\t\tlet id = this.props.id;\r\n\t\t\tlet children = this.props.children;\r\n\t\t\t// 关联子级的验证，暂时不使用\r\n\t\t\t// if (this.props.multiple && this.props.checkStrictly) {\r\n\t\t\t// \tif (this.newCheckList.length != 0) {\r\n\t\t\t// \t\tthis.checkAllChoose();\r\n\t\t\t// \t\treturn;\r\n\t\t\t// \t}\r\n\t\t\t// \tfor (let i = 0; i < this.tree.length; i++) {\r\n\t\t\t// \t\tthis.$set(this.tree[i], 'bx', 0)\r\n\t\t\t// \t\tthis.$set(this.tree[i], 'qx', 0)\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\t\t\t// 初始化选中项\r\n\t\t\tif (!this.props.multiple && this.newCheckList.length > 0) {\r\n\t\t\t\tthis.getNodeRoute(this.allData, this.newCheckList[0][id]);\r\n\t\t\t\tlet arr = this.nodePathArray.reverse();\r\n\t\t\t\tif (arr.length == 0) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.concatTreeStack(arr);\t\t\t\t// 获取导航条的值\t\t\t\r\n\t\t\t\t// 加载当前列对应的数据\r\n\t\t\t\tvar tree_stack = this.getTreeStack();\r\n\t\t\t\tvar data = Boolean(tree_stack[tree_stack.length -1][children]) ? tree_stack[tree_stack.length - 1][\r\n\t\t\t\t\tchildren\r\n\t\t\t\t] : [];\r\n\t\t\t\tthis.loadTree(data);\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t// ========================================== 添加方法 =====================================================================\r\n\t\t\t/** 当前选项是否选中\r\n\t\t\t * @param {Object} item\r\n\t\t\t */\r\n\t\t\tisChecked(item){\r\n\t\t\t\tif(Array.isArray(this.newCheckList)){\r\n\t\t\t\t\tlet id = this.props.id;\r\n\t\t\t\t\tlet temp = this.newCheckList.find(chcked=>{\r\n\t\t\t\t\t\treturn chcked[id] == item.id;\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn Boolean(temp);\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\t// =========================================== 初始化方法 ===================================================================\r\n\t\t\t/** 初始化导航条的方法\r\n\t\t\t * @param {Object} e\r\n\t\t\t */\r\n\t\t\tnavigationInt: function(e) {\r\n\t\t\t\tthis.setIsre = e.setIsre;\r\n\t\t\t\tthis.getIsre = e.getIsre;\r\n\t\t\t\tthis.concatTreeStack = e.concatTreeStack;\r\n\t\t\t\tthis.pushTreeStack = e.pushTreeStack;\r\n\t\t\t\tthis.clearTreeStack = e.clearTreeStack;\r\n\t\t\t\tthis.getTreeStack = e.getTreeStack;\r\n\t\t\t},\r\n\t\t\t// =========================================== 监听事件 =====================================================================\r\n\t\t\t/** 选中当前的值\r\n\t\t\t * @param {Object} e\r\n\t\t\t * @param {Object} item 当前项\r\n\t\t\t * @param {Object} index 低昂去索引\r\n\t\t\t */\r\n\t\t\tcheckbox(e, item, index) {\r\n\t\t\t\tvar func = this.props.multiple ?  this.checkboxChange : this.radioChange;\r\n\t\t\t\tfunc(e,item ,index);\t\t\t// 执行选择操作\r\n\t\t\t},\r\n\t\t\t/**单选\r\n\t\t\t * @param {Object} e 点击事件\r\n\t\t\t * @param {Object} item 当前项的值\r\n\t\t\t * @param {Object} index 索引\r\n\t\t\t */\r\n\t\t\tradioChange :function( e,item ,index){\r\n\t\t\t\tvar that = this;\r\n\t\t\t\tif(e.detail.value){\r\n\t\t\t\t\t// 选中当前对象\r\n\t\t\t\t\tthat.newCheckList = [];\r\n\t\t\t\t\tthat.newCheckList.push(that.tree[index]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// 移除其他对象\r\n\t\t\t\t\tvar nIndex = that.newCheckList.indexOf(item);\r\n\t\t\t\t\tthat.newCheckList.splice(nIndex , 1);\r\n\t\t\t\t}\r\n\t\t\t\tthat.$emit('change', that.newCheckList);\r\n\t\t\t},\r\n\t\t\t/**异步检查复选框值的改变\r\n\t\t\t * @param {Object} item\r\n\t\t\t * @param {Object} index\r\n\t\t\t * @param {Object} bx\r\n\t\t\t * @param {Object} qx\r\n\t\t\t */\r\n\t\t\t async checkboxChange (e,item, index, bx, qx) {\r\n\t\t\t\tlet that = this;\r\n\t\t\t\tlet findIdex = that.newCheckList.indexOf(item);\r\n\t\t\t\tif(e.detail.value){\r\n\t\t\t\t\t// 点击选中\r\n\t\t\t\t\tif(findIdex == -1){\r\n\t\t\t\t\t\tthat.newCheckList.push(that.tree[index]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// 点击不选\r\n\t\t\t\t\tthat.newCheckList.splice(findIdex , 1);\r\n\t\t\t\t}\r\n\t\t\t\tthat.$emit('change', that.newCheckList);\r\n\t\t\t\t\r\n\t\t\t\t// if (findIdex > -1) { //反选\r\n\t\t\t\t// \tif (that.props.checkStrictly) { //关联子级\r\n\t\t\t\t// \t\tif (item[props.hasChilren]) { //用户\r\n\t\t\t\t// \t\t\tthat.newCheckList.splice(findIdex, 1)\r\n\t\t\t\t// \t\t} else { //非用户，取消所有下一级\r\n\t\t\t\t// \t\t\tif (Boolean(item[props.children])) {\r\n\t\t\t\t// \t\t\t\tthat.getIdBydelete(item[props.children]);\r\n\t\t\t\t// \t\t\t}\r\n\t\t\t\t// \t\t}\r\n\t\t\t\t// \t} else {\r\n\t\t\t\t// \t\tthat.newCheckList.splice(findIdex, 1)\r\n\t\t\t\t// \t}\r\n\t\t\t\t// } else { //选中\r\n\t\t\t\t// \tif (!item[this.props.hasChilren] && that.props.checkStrictly) { //选中下一级\r\n\t\t\t\t// \t\tif (qx || bx) { //取消下级\r\n\t\t\t\t// \t\t\tif (Boolean(item[props.children])) {\r\n\t\t\t\t// \t\t\t\tawait that.getIdBydelete(item[props.children]);\r\n\t\t\t\t// \t\t\t}\r\n\t\t\t\t// \t\t\titem.qx = 0;\r\n\t\t\t\t// \t\t\titem.bx = 0;\r\n\t\t\t\t// \t\t} else {\r\n\t\t\t\t// \t\t\titem.qx = 1;\r\n\t\t\t\t// \t\t\titem.bx = 0;\r\n\t\t\t\t// \t\t\tif (Boolean(item[props.children])) {\r\n\t\t\t\t// \t\t\t\tawait that.chooseChild(item[props.children], item[this.props.id]);\r\n\t\t\t\t// \t\t\t}\r\n\t\t\t\t// \t\t}\r\n\t\t\t\t// \t\tthat.$emit('change', that.newCheckList);\r\n\t\t\t\t// \t\t// that.$forceUpdate()\r\n\t\t\t\t// \t\treturn;\r\n\t\t\t\t// \t}\r\n\t\t\t\t// \t// if(item[this.props.hasChilren]&&this.props.checkStrictly) this.getNodeRoute(this.allData,item[this.props.id]);\r\n\t\t\t\t// \tthat.newCheckList.push({\r\n\t\t\t\t// \t\t...item\r\n\t\t\t\t// \t});\r\n\t\t\t\t// }\r\n\t\t\t\t// that.$emit('change', that.newCheckList)\r\n\t\t\t},\r\n\t\t\t// 取消下一级的选中\r\n\t\t\tgetIdBydelete(arr) {\r\n\t\t\t\tarr.forEach(e => {\r\n\t\t\t\t\tif (true) {\r\n\t\t\t\t\t\tfor (var i = 0; i < this.newCheckList.length; i++) {\r\n\t\t\t\t\t\t\t// 包含下一级\r\n\t\t\t\t\t\t\tif (e[this.props.id] == this.newCheckList[i][this.props.id]) {\r\n\t\t\t\t\t\t\t\tthis.newCheckList.splice(i, 1)\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (false) {\r\n\t\t\t\t\t\t// 不包含下一级\r\n\t\t\t\t\t\tif (Boolean(item[props.children])) {\r\n\t\t\t\t\t\t\tthis.getIdBydelete(e[props.children]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t// 关联下一级,选中\r\n\t\t\tchooseChild(arr, pid) {\r\n\t\t\t\tlet that = this;\r\n\t\t\t\tfor (var i = 0, len = arr.length; i < len; i++) {\r\n\t\t\t\t\tlet item = arr[i];\r\n\t\t\t\t\tif (true) {\r\n\t\t\t\t\t\t// 包含下一级\r\n\t\t\t\t\t\tthat.newCheckList.push({\r\n\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\ttree_stackId: pid\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (false) {\r\n\t\t\t\t\t\t// 不包含下一级\r\n\t\t\t\t\t\t// !item[that.props.hasChilren]\r\n\t\t\t\t\t\tif (Boolean(item[props.children])) {\r\n\t\t\t\t\t\t\tthis.chooseChild(item[props.children], item[this.props.id])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/** \r\n\t\t\t * @param {Array} tree 目标树\r\n\t\t\t * @param {Object} targetId 为目标节点id\r\n\t\t\t */\r\n\t\t\tgetNodeRoute(tree, targetId) {\r\n\t\t\t\tlet children = this.props.children;\r\n\t\t\t\tlet id = this.props.id;\r\n\t\t\t\tfor (let index = 0; index < tree.length; index++) {\r\n\t\t\t\t\tif (Boolean(tree[index][children]) ) {\r\n\t\t\t\t\t\tif (tree[index][children]) {\r\n\t\t\t\t\t\t\tlet endRecursiveLoop = this.getNodeRoute(tree[index][children], targetId)\r\n\t\t\t\t\t\t\tif (endRecursiveLoop) {\r\n\t\t\t\t\t\t\t\tthis.nodePathArray.push(tree[index]);\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (tree[index][id] === targetId) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t/**跳转到子级\r\n\t\t\t * @param {Object} item 选中的项\r\n\t\t\t * @param {Boolean} realHasChildren 是否包含子级\r\n\t\t\t */\r\n\t\t\ttoChildren(item, realHasChildren) {\r\n\t\t\t\tthis.$emit(\"clickItem\" , item , realHasChildren);\t\t// 点击导航栏事件\r\n\t\t\t\t// 不包含子级,不执行任何操作\r\n\t\t\t\tif (!realHasChildren) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// 点击跳转下一级\r\n\t\t\t\tlet id = this.props.id;\r\n\t\t\t\tlet children = this.props.children; // 子级名称\r\n\r\n\t\t\t\t// 将当前item加入到导航列表\r\n\t\t\t\tif (item[children].length > 0) {\r\n\t\t\t\t\tthis.loadTree(item[children]);\r\n\t\t\t\t\tthis.pushTreeStack(item); // 添加导航\r\n\t\t\t\t}\r\n\t\t\t\t// 关联数据 - 暂时不使用\r\n\t\t\t\t// if (this.props.checkStrictly) {\r\n\t\t\t\t// \tthis.checkAllChoose();\r\n\t\t\t\t// }\r\n\t\t\t},\r\n\t\t\t/** 搜索提交方法\r\n\t\t\t * @param {Object} e\r\n\t\t\t */\r\n\t\t\tconfirmSearch(e) {\r\n\t\t\t\tvar val = e.detail.value;\r\n\t\t\t\tthis.searchResult = [];\r\n\t\t\t\t// 查找\r\n\t\t\t\tuni.showLoading({\r\n\t\t\t\t\ttitle: '正在查找'\r\n\t\t\t\t});\r\n\t\t\t\tthis.search(this.allData, val);\r\n\t\t\t\t// 返回搜索结果\r\n\t\t\t\tuni.hideLoading();\r\n\t\t\t\tthis.setIsre(true); // 设置导航条为搜索状态\r\n\t\t\t\tthis.clearTreeStack(); // 清空导航条\r\n\t\t\t\tthis.loadTree(this.searchResult);\r\n\t\t\t},\r\n\t\t\t/**搜索方法\r\n\t\t\t * @param {Object} data 搜索数据\r\n\t\t\t * @param {Object} keyword 搜索关键字\r\n\t\t\t */\r\n\t\t\tsearch(data, keyword) {\r\n\t\t\t\tvar that = this;\r\n\t\t\t\tlet children = that.props.children;\r\n\t\t\t\tfor (var i = 0, len = data.length; i < len; i++) {\r\n\t\t\t\t\t// try-catch(try-catch) - 没有label列，跳过继续执行\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tif (data[i][that.props.label].indexOf(keyword) >= 0) {\r\n\t\t\t\t\t\t\tthat.searchResult.push(data[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (Boolean(data[i][children])) {\r\n\t\t\t\t\t\t\tif (data[i][children].length > 0) {\r\n\t\t\t\t\t\t\t\tthat.search(data[i][children], keyword);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 检查所有的选项\r\n\t\t\t */\r\n\t\t\tcheckAllChoose() {\r\n\t\t\t\tlet o = false,\r\n\t\t\t\t\tt = true;\r\n\t\t\t\tthis.tree.forEach((e, i) => {\r\n\t\t\t\t\tif (true) {\r\n\t\t\t\t\t\t// 包含下一级 !e[this.props.hasChilren]\r\n\t\t\t\t\t\te.qx = o;\r\n\t\t\t\t\t\te.bx = o;\r\n\t\t\t\t\t\tlet num2 = this.computAllNumber(e[props.children]);\r\n\t\t\t\t\t\t// console.log(this.newNum,this.oldNum)\r\n\t\t\t\t\t\tif (this.newNum != 0 && this.oldNum != 0) {\r\n\t\t\t\t\t\t\tif (this.newNum == this.oldNum) {\r\n\t\t\t\t\t\t\t\te.qx = t;\r\n\t\t\t\t\t\t\t\te.bx = o;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\te.qx = o;\r\n\t\t\t\t\t\t\t\te.bx = t;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.newNum != 0 && this.oldNum == 0) {\r\n\t\t\t\t\t\t\tthis.$set(this.tree[i], 'bx', o);\r\n\t\t\t\t\t\t\tthis.$set(this.tree[i], 'qx', o);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// this.$forceUpdate()\r\n\t\t\t\t\t\tthis.newNum = 0\r\n\t\t\t\t\t\tthis.oldNum = 0\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\r\n\t\t\t// 选中所选值\r\n\t\t\tcomputAllNumber(arr) {\r\n\t\t\t\tconsole.log(\"选中所选值\");\r\n\t\t\t\t// for (let j = 0; j < arr.length; j++) {\r\n\t\t\t\t// \tvar e = arr[j];\r\n\t\t\t\t// \t// if (arr[j][that.props.hasChilren]) {\r\n\t\t\t\t// \t\tthis.newNum++;\r\n\t\t\t\t// \t// }\r\n\t\t\t\t// \tthis.checkSum(e.id)\r\n\t\t\t\t// \tif (!e[that.props.hasChilren]) {\r\n\t\t\t\t// \t\tthis.computAllNumber(e[props.children])\r\n\t\t\t\t// \t}\r\n\t\t\t\t// }\r\n\t\t\t},\r\n\r\n\t\t\t// 选中事件累计\r\n\t\t\tcheckSum(id) {\r\n\t\t\t\tfor (let i = 0; i < this.newCheckList.length; i++) {\r\n\t\t\t\t\tif (id == this.newCheckList[i].id) {\r\n\t\t\t\t\t\tthis.oldNum++;\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/** 返回到其他树层\r\n\t\t\t * @param {Object} item 当前item值\r\n\t\t\t * @param {Object} index 返回到其他索引\r\n\t\t\t */\r\n\t\t\tbackTree(item, index) {\r\n\t\t\t\tthis.$emit(\"backTree\", item, index);\r\n\t\t\t\tlet that = this;\r\n\t\t\t\tif (index == -1) {\r\n\t\t\t\t\t// 全部\r\n\t\t\t\t\tthat.loadTree(that.allData);\r\n\t\t\t\t} else if (index == -2) {\r\n\t\t\t\t\t// 搜索\r\n\t\t\t\t\tthat.loadTree(that.searchResult);\t\t// 搜索结果\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 其他层级\r\n\t\t\t\t\tthat.loadTree(item[that.props.children]);\t// tree的其他层级\r\n\t\t\t\t}\r\n\t\t\t\t// 关联数据\r\n\t\t\t\t// if (this.props.checkStrictly) {\r\n\t\t\t\t// \tthis.checkAllChoose();\r\n\t\t\t\t// }\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t * 点击确认按钮执行事件\r\n\t\t\t */\r\n\t\t\tbackConfirm() {\r\n\t\t\t\tthis.$emit('sendValue', this.newCheckList, 'back')\r\n\t\t\t},\r\n\t\t\t// ======================================== 公共方法 ===============================================================\r\n\t\t\t/**加载Tree值\r\n\t\t\t * @param {Array} datas 待复制的数组\r\n\t\t\t * @param {Number} start 起始位置\r\n\t\t\t * @description 加载tree值。当数据量大时，子项加载时间很长。可以多次渲染加载\r\n\t\t\t */\r\n\t\t\tloadTree : function(datas , start = 0 ){\r\n\t\t\t\tlet that = this;\r\n\t\t\t\tif(!this.stepReload){\r\n\t\t\t\t\t// 不进行多次渲染加载\r\n\t\t\t\t\tthat.tree = datas;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// datas为null, 不进行渲染\r\n\t\t\t\t\tif(!Array.isArray(datas)){\r\n\t\t\t\t\t\tthat.tree = datas;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}else if(datas.length === 0){\r\n\t\t\t\t\t\tthat.tree = datas;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 进行多次渲染加载\r\n\t\t\t\t\tif(start === 0){\r\n\t\t\t\t\t\t// 终止其他渲染\r\n\t\t\t\t\t\tif(that.itemsLoading){\r\n\t\t\t\t\t\t\tthat.itemsStop = true;\t\t//终止其他Item渲染\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 首次加载提醒\r\n\t\t\t\t\t\tuni.showLoading();\r\n\t\t\t\t\t\tthat.tree = [];\r\n\t\t\t\t\t\tthat.itemsLoading = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar length =  datas.length ;\r\n\t\t\t\t\tvar end = Math.min(start + that.pageSize , length);\r\n\t\t\t\t\tvar tempArray  = datas.slice(start , end);\r\n\t\t\t\t\tthat.tree = that.tree.concat(tempArray);\r\n\t\t\t\t\tthat.$nextTick(function(){\r\n\t\t\t\t\t\tif(start == 0){\r\n\t\t\t\t\t\t\tuni.hideLoading();\r\n\t\t\t\t\t\t\tthat.itemsStop = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(end < length && !that.itemsStop){\r\n\t\t\t\t\t\t\tthat.loadTree(datas, end);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthat.itemsLoading = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// =================================================================================================================\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n\t@import \"luyj-tree.scss\";\r\n\t@import \"icon.css\";\r\n</style>\r\n","import mod from \"-!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-2!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-5!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./luyj-tree.vue?vue&type=style&index=0&id=235a85fd&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-2!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-5!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./luyj-tree.vue?vue&type=style&index=0&id=235a85fd&lang=scss&scoped=true&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1634820235353\n      var cssReload = require(\"D:/Program Files/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}